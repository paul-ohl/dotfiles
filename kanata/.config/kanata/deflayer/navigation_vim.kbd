;; Vim-Navigation layer:
;;  - right: Vim-like arrows on HJKL, home/end page up/down, mouse scroll
;;  - left: one-hand shortcuts (Cmd/Ctrl-WASZXCV), Tab/Shift-Tab, prev/next
;;  - top: Super-num (i3/sway) or Alt-num (browser), zoom in/out

;; The `lrld` action stands for "live reload". This will re-parse everything
;; except for linux-dev, i.e. you cannot live reload and switch keyboard devices.

(deflayer navigation
  M-1  M-2  M-3  M-4  M-5  lrld M-6  M-7  M-8  M-9  M-0
  tab  home end  XX   XX        XX   XX   @mwd @pad @pad
  @d1  @d2  @d3  @d4  @d5       XX   @dwn @up  @rgt @mwu
  @ndo @cut @cpy @pst XX    _   XX   lft  @srt XX   @fun
            del             _             ret
)

;; NumPad
(deflayer numpad
  _    _    _    _    _     _   _    _    _    _    _
  tab  home end  @stb pgup      @/   @7   @8   @9   XX
  @d1  @d2  @d3  @d4  @d5       @-   @4   @5   @6   @0
  XX   XX   XX   XX   XX    _   @,   @1   @2   @3   @.
            @std           spc            @std
)

;; function keys
(deflayer funpad
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  f1   f2   f3   f4   XX        XX   XX   XX   XX   XX
  f5   f6   f7   f8   XX        XX   lctl lalt lmet _
  f9   f10  f11  f12  XX   XX   XX   XX   XX   XX   XX
            _               _             _
)

(defalias
  std (layer-switch base)
  pad (layer-switch numpad)

  fun (layer-while-held funpad)

  stb S-tab
  srt S-ret

  ;; Mouse wheel emulation
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)

  ;; Desktops
  d1 M-A-S-1
  d2 (tap-hold $tap_timeout $long_hold_timeout M-A-S-2 lmet)
  d3 (tap-hold $tap_timeout $long_hold_timeout M-A-S-3 lalt)
  d4 (tap-hold $tap_timeout $long_hold_timeout M-A-S-4 lctl)
  d5 M-A-S-5

  ;; Directions
  dwn (tap-hold $tap_timeout $long_hold_timeout down lctl)
  up (tap-hold $tap_timeout $long_hold_timeout up lalt)
  rgt (tap-hold $tap_timeout $long_hold_timeout rght lmet)
)

;; vim: set ft=lisp
